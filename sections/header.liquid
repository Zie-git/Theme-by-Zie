<div class="relative bg-white" x-data="{ mobileMenuOpen: false, searchBarOpen: false }" x-cloak>
  <div class="mx-auto px-4 sm:px-6">
    <div class="flex justify-center items-center py-6 md:justify-start md:space-x-10">
      <!-- STORE NAME / STORE LOGO -->
      <div class="flex justify-start lg:flex-1 truncate">
        <h1 class="text-xl font-bold truncate">{{ shop.name }}</h1>
      </div>

      <div class="-mr-2 -my-2 ml-3 md:hidden">
        <button x-on:click="mobileMenuOpen = true" type="button" class="bg-white p-2 inline-flex items-center justify-center focus:outline-none">
          {% render 'icon-menu' %}
        </button>
      </div>

      <!-- NAVIGATION MENU (DESKTOP) -->
      <nav class="hidden md:flex space-x-10">
        {% if section.settings.menu.links == blank %}
          {% assign main_menu_linklist = linklists[section.settings.menu].links %}
        {% else %}
          {% assign main_menu_linklist = section.settings.menu.links %}
        {% endif %}
        {% for link in main_menu_linklist %}
          {% if link.links != blank %}
            {% assign link_handle = link.handle | replace: '-', '_' %}
            <div class="relative" x-data="{ {{ link_handle }}: false }">
              <button type="button" x-on:click="{{ link_handle }} = ! {{ link_handle }}" class="inline-flex items-center">
                {{ link.title }}
                {% render 'icon-dropdown' %}
              </button>
              <div 
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0 translate-y-3"
                x-transition:enter-end="opacity-100 translate-y-0"
                x-transition:leave="transition ease-out duration-300"
                x-transition:leave-start="opacity-100 translate-y-0"
                x-transition:leave-end="opacity-0 translate-y-3"
                x-show="{{ link_handle }}" 
                @click.away="{{ link_handle }} = false" 
                class="absolute z-10 -ml-5 mt-5 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2">
                <div class="shadow-lg border ring-black ring-opacity-5 overflow-hidden rounded-lg">
                  <div class="relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8">
                    {% for childlink in link.links %}
                      <a href="{{ childlink.url }}" class="-m-3 p-3 flex items start rounded-lg hover:bg-gray-100">
                        <div class="ml-4">
                          <p class="text-gray-900 text-base font-medium">
                            {{ childlink.title }}
                          </p>
                        </div>
                      </a>
                    {% endfor %}
                  </div>
                </div>
              </div>
            </div>
          {% else %}
            <a href="{{ link.url }}" class="text-base text-gray-500 hover:text-gray-900">{{ link.title }}</a>
          {% endif %}
        {% endfor %}

        <!-- GEO-TARGETED DESKTOP LINKS -->
        <a id="menu-ph" href="/collections/philippines" class="text-base text-gray-500 hover:text-gray-900 hidden">PH Store</a>
        <a id="menu-jp" href="/collections/japan" class="text-base text-gray-500 hover:text-gray-900 hidden">JP Store</a>
        <a id="menu-na" href="/collections/north-america" class="text-base text-gray-500 hover:text-gray-900 hidden">NA Store</a>
        <a id="menu-ca" href="/collections/canada" class="text-base text-gray-500 hover:text-gray-900 hidden">CA Store</a>
      </nav>

      <!-- CART / ACCOUNT -->
      <div class="hidden md:flex items-center justify-end md:flex-1 space-x-5">
        <button x-on:click="searchBarOpen = true" type="button" class="whitespace-nowrap text-base text-gray-500 hover:text-gray-900">
          {% render 'icon-search' %}
        </button>
        <a href="{{ routes.cart_url }}" class="whitespace-nowrap text-base text-gray-500 hover:text-gray-900">
          {% render 'cart-icon' %}
        </a>

        {% if shop.customer_accounts_enabled %}
          {% if customer %}
            <a href="{{ routes.account_url }}" class="text-base text-gray-500 hover:text-gray-900">account</a>
            {{ 'Log out'  | customer_logout_link | replace: '<a', '<a class="text-base text-gray-500 hover:text-gray-900"' }}
          {% else %}
            {{ 'Log in ' | customer_login_link | replace: '<a', '<a class="text-base text-gray-500 hover:text-gray-900"' }}
            {{ 'Register' | customer_register_link | replace: '<a', '<a class="text-base text-gray-500 hover:text-gray-900"' }}
          {% endif %}
        {% endif %}
      </div>

      <!-- MOBILE MENU -->
      <div x-show="mobileMenuOpen" class="absolute z-10 top-0 inset-x-0 p-2 transform origin-top-left md:hidden">
        <div class="shadow-lg rounded-lg ring-1 ring-black ring-opacity-5 bg-white w-full">
          <div class="p-5 divide-y-2 divide-gray-50">
            <div class="flex items-center justify-between pb-3">
              <div>
                <h1 class="text-lg text-gray-500">{{ section.settings.mobile_menu_title }}</h1>
              </div>
              <div class="-mr-2">
                <button x-on:click="mobileMenuOpen = false" type="button" class="bg-white rounded-md p-2 text-gray-500">
                  {% render 'icon-close' %}
                </button>
              </div>
            </div>

            <!-- MOBILE LINKS -->
            <div class="pt-3">
              <nav class="grid gap-y-7">
                {% if section.settings.menu.links == blank %}
                  {% assign main_menu_linklist = linklists[section.settings.menu].links %}
                {% else %}
                  {% assign main_menu_linklist = section.settings.menu.links %}
                {% endif %}
                {% for link in main_menu_linklist %}
                  {% if link.links != blank %}
                    {% assign mobile_link_handle = link.handle | replace: '-', '_' %}
                    <div class="relative" x-data="{ {{ mobile_link_handle }}: false }">
                      <button x-on:click="{{ mobile_link_handle }} = ! {{ mobile_link_handle }}" type="button" class="text-base text-gray-500 hover:text-gray-900 flex items-center justify-between w-full">
                        <div>{{ link.title }}</div>
                        {% render 'icon-dropdown' %}
                      </button>
                      <div x-show="{{ mobile_link_handle }}" class="grid gap-y-7 py-3">
                        {% for childlink in link.links %}
                          <a href="{{ childlink.url }}" class="-m-3 p-3 mt-2 flex items-center rounded-md text-gray-500 hover:text-gray-900 hover:bg-gray-50">
                            <span class="ml-3 text-base font-medium text-gray-500">{{ childlink.title }}</span>
                          </a>
                        {% endfor %}
                      </div>
                    </div>
                  {% else %}
                    <a href="{{ link.url }}" class="-m-3 p-3 flex items-center rounded-md text-gray-500 hover:text-gray-900 hover:bg-gray-50">
                      {{ link.title }}
                    </a>
                  {% endif %}
                {% endfor %}

                <!-- GEO-TARGETED MOBILE LINKS -->
                <a id="menu-ph-mobile" href="/collections/philippines" class="text-base text-gray-500 hover:text-gray-900 hidden">PH Store</a>
                <a id="menu-jp-mobile" href="/collections/japan" class="text-base text-gray-500 hover:text-gray-900 hidden">JP Store</a>
                <a id="menu-na-mobile" href="/collections/north-america" class="text-base text-gray-500 hover:text-gray-900 hidden">NA Store</a>
                <a id="menu-ca-mobile" href="/collections/canada" class="text-base text-gray-500 hover:text-gray-900 hidden">CA Store</a>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- SEARCH BAR -->
  <div x-show="searchBarOpen" class="w-full absolute top-0 bg-white border">
    <button type="button" x-on:click="searchBarOpen = false" class="absolute top-0 right-0 mr-5 mt-5 text-gray-500">
      {% render 'icon-close' %}
    </button>
    <div class="h-40 flex justify-center items-center">
      <form action="{{ routes.search_url }}" method="get" class="flex-auto">
        <div class="relative text-gray-500 px-10 border">
          <input type="search" name="q" placeholder="Search" class="w-full bg-white h-10 px-5 pr-10 rounded-full text-sm focus:outline-none">
          <button type="submit" class="absolute right-0 top-0 mt-2 mr-2 md:mr-20">
            {% render 'icon-search' %}
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
function getCountryLive({ ipInfoToken = '', timeoutMs = 4000, fallback = 'US' } = {}) {
  // 1) Shopify server-side country (instant)
  if (window.SHOPIFY_COUNTRY) {
    return Promise.resolve(window.SHOPIFY_COUNTRY.toUpperCase());
  }

  // 2) fallback to ipinfo.io
  const ipInfoUrl = ipInfoToken
    ? `https://ipinfo.io/json?token=${encodeURIComponent(ipInfoToken)}`
    : `https://ipinfo.io/json`;

  function fetchWithTimeout(url, opts = {}) {
    return new Promise((resolve, reject) => {
      const timer = setTimeout(() => reject(new Error('timeout')), timeoutMs);
      fetch(url, opts).then(res => {
        clearTimeout(timer);
        resolve(res);
      }).catch(err => {
        clearTimeout(timer);
        reject(err);
      });
    });
  }

  return fetchWithTimeout(ipInfoUrl, { credentials: 'omit' })
    .then(res => {
      if (!res.ok) throw new Error('geo failed ' + res.status);
      return res.json();
    })
    .then(data => (data && data.country) ? data.country.toUpperCase() : fallback)
    .catch(() => fallback);
}

// Run after DOM is ready
document.addEventListener('DOMContentLoaded', function () {
  getCountryLive({ ipInfoToken: 'b53e036b187230' }).then(country => {
    console.log('Live country:', country);

    if (country === 'PH') {
      document.getElementById('menu-ph').style.display = 'block !important';
      document.getElementById('PH').style.display = 'inline-block !important';
      document.getElementById('badge1').style.display = 'block !important';

    } else if (country === 'JP') {
      document.getElementById('menu-jp').style.display = 'block !important';
      document.getElementById('JP').style.display = 'inline-block !important';
      document.getElementById('badge2').style.display = 'block !important';

    } else if (country === 'CA') {
      document.getElementById('menu-ca').style.display = 'block !important';
      document.getElementById('CA').style.display = 'inline-block !important';
      document.getElementById('badge3').style.display = 'block !important';

    } else {
      document.getElementById('menu-na').style.display = 'block !important';
      document.getElementById('NA').style.display = 'inline-block !important';
      document.getElementById('badge4').style.display = 'block !important';
    }
  });
});
</script>

{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "text",
      "id": "mobile_menu_title",
      "default": "Menu",
      "label": "Mobile Menu Title"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "Heading Navigation Menu"
    }
  ]
}
{% endschema %}
