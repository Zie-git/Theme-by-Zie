{% schema %}
{
  "name": "Featured Products",
  "settings": [
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding Top",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding Bottom",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 20
    },
    {
      "type": "range",
      "id": "width",
      "label": "Width (%)",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 100
    },
    {
      "type": "color",
      "id": "modal_overlay",
      "label": "Modal Overlay Color",
      "default": "rgba(0, 0, 0, 0.5)"
    },
    {
      "type": "color",
      "id": "modal_background",
      "label": "Modal Background Color",
      "default": "#ffffff"
    },
    {
      "type": "text",
      "id": "modal_title",
      "label": "Modal Title",
      "default": "Select Product Options"
    }
  ],
  "blocks": [
    {
      "type": "product1",
      "name": "Product 1",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select Product 1"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text",
          "default": "Buy Now"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "C-Featured Products",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div class="featured-products" style="padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px; width: {{ section.settings.width }}%;">
  <h2>Choose Your Product</h2>
  <div class="products-grid">
    {% for block in section.blocks %}
      {% assign product = all_products[block.settings.product] %}
      {% if product %}
        <div class="product-card">
          <div class="product-image">
            <img id="product-image-{{ block.id }}" src="{{ product.featured_image | img_url: '2048x2048' }}" alt="{{ product.title }}">
          </div>
          <div class="product-info">
            <h3>{{ product.title }}</h3>
            <p>{{ product.price | money }}</p>
            <button class="btn" data-product-id="{{ block.id }}" data-product-handle="{{ product.handle }}">{{ block.settings.button_text }}</button>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

<!-- Modal -->
<div id="productModal" class="modal">
  <div class="modal-content">
    <span class="close" id="closeModal">&times;</span>
    <h2>{{ settings.modal_title }}</h2>
    <div id="modalContent"></div>
    <button id="checkoutButton" class="order-now">Checkout</button>
  </div>
</div>

<style>
/* Add your styles here for modal and color picker */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: {{ settings.modal_overlay }};
  z-index: 1000;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background-color: {{ settings.modal_background }};
  padding: 20px;
  border-radius: 10px;
  max-width: 500px;
  width: 90%;
  position: relative;
}

.close {
  position: absolute;
  top: 10px;
  right: 15px;
  cursor: pointer;
}

.color-options {
  display: flex;
  gap: 10px;
}

.color-box {
  width: 30px;
  height: 30px;
  border: 1px solid #ddd;
  cursor: pointer;
  transition: border 0.3s ease;
}

.color-box.selected {
  border: 2px solid #000;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const modal = document.getElementById("productModal");
  const closeModal = document.getElementById("closeModal");
  const modalContent = document.getElementById("modalContent");
  const checkoutButton = document.getElementById("checkoutButton");

  document.querySelectorAll(".btn").forEach(button => {
    button.addEventListener("click", function () {
      const productId = this.getAttribute("data-product-id");
      const productHandle = this.getAttribute("data-product-handle");
      
      fetch(`/products/${productHandle}.json`)
        .then(response => response.json())
        .then(data => {
          const product = data.product;
          modalContent.innerHTML = `
            <img src="${product.featured_image}" alt="${product.title}" style="width: 100%; height: auto;">
            <h3>${product.title}</h3>
            <p>${product.price}</p>
            <div class="color-options">
              ${product.variants.map(variant => `
                <div 
                  class="color-box" 
                  data-variant-id="${variant.id}" 
                  style="background-color: ${variant.option1.toLowerCase()};">
                </div>`).join("")}
            </div>
          `;

          document.querySelectorAll(".color-box").forEach(box => {
            box.addEventListener("click", function () {
              document.querySelectorAll(".color-box").forEach(box => box.classList.remove("selected"));
              this.classList.add("selected");
              checkoutButton.setAttribute("data-variant-id", this.getAttribute("data-variant-id"));
            });
          });

          modal.style.display = "flex";
        });
    });
  });

  closeModal.addEventListener("click", () => {
    modal.style.display = "none";
  });

  window.addEventListener("click", event => {
    if (event.target === modal) modal.style.display = "none";
  });

  checkoutButton.addEventListener("click", function () {
    const variantId = this.getAttribute("data-variant-id");
    if (variantId) {
      fetch("/cart/add.js", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ id: variantId })
      }).then(() => {
        window.location.href = "/checkout";
      });
    } else {
      alert("Please select a variant first!");
    }
  });
});
</script>
