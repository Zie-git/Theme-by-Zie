{% schema %}
{
  "name": "Zoom Image",
  "settings": [
    {
      "type": "image_picker",
      "label": "Background Image",
      "id": "background_image",
      "info": "Select the background image for this section."
    },
    {
      "type": "text",
      "label": "Main Text",
      "id": "main_text",
      "default": "Your Main Text Here",
      "info": "Enter the main text to display over the background."
    },
    {
      "type": "text",
      "label": "Subtitle",
      "id": "subtitle",
      "default": "Your Subtitle Here",
      "info": "Enter the subtitle text."
    },
    {
      "type": "url",
      "label": "Button URL",
      "id": "button_url",
      "default": "/",
      "info": "Enter the URL for the button link."
    },
    {
      "type": "text",
      "label": "Button Text",
      "id": "button_text",
      "default": "Click Me",
      "info": "Enter the text for the button."
    }
  ],
  "presets": [
    {
      "name": "Zoom Image",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div id="zoom-section" class="image-text-section">
  <div class="background" style="background-image: url({{ section.settings.background_image | img_url: 'original' }});"></div>
  <div class="overlay">
    <div class="content">
      <h2 class="main-text">{{ section.settings.main_text }}</h2>
      <h3 class="subtitle">{{ section.settings.subtitle }}</h3>
      <a href="{{ section.settings.button_url }}" class="button">{{ section.settings.button_text }}</a>
    </div>
  </div>
</div>

<style>
  .image-text-section {
    position: relative;
    overflow: hidden;
    height: 100vh; /* Full viewport height */
  }

  .background {
    width: 100%; /* Full width */
    height: 100%; /* Full height of the section */
    background-size: cover;
    background-position: center;
    transform: translate(-50%, -50%);
    transition: transform 0.1s ease-in-out; /* Smooth transition */
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 1s ease-out;
  }

  .content {
    text-align: center;
    color: white;
    display: none; /* Initially hidden */
  }

  .main-text {
    font-size: 2.5rem;
    margin-bottom: 10px;
  }

  .subtitle {
    font-size: 1.5rem;
    margin-bottom: 20px;
  }

  .button {
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 5px;
    font-size: 1rem;
  }

  .button:hover {
    background-color: #0056b3;
  }
</style>

<script>
  // Function to check if the section is in view
  function isSectionInView(element) {
    const rect = element.getBoundingClientRect();
    return rect.top < window.innerHeight && rect.bottom >= 0; // Checks if section is within the viewport
  }

  // Triggered on scroll
  window.addEventListener('scroll', function() {
    const section = document.querySelector('#zoom-section'); // Get section by ID
    const background = document.querySelector('.background');
    const overlay = document.querySelector('.overlay');
    const content = document.querySelector('.content');

    // Check if the section is in the viewport
    if (isSectionInView(section)) {
      const scrollPosition = window.scrollY;
      const sectionTop = section.offsetTop;
      const sectionHeight = section.offsetHeight;
      
      // Calculate scroll ratio within the section
      const scrollRatio = (scrollPosition + window.innerHeight - sectionTop) / sectionHeight;

      // Calculate the scale to zoom the background image (from 0.2 to 1)
      const scale = 0.2 + (scrollRatio * 0.8); // Scale from 0.2 to 1 as you scroll
      background.style.transform = `translate(-50%, -50%) scale(${scale})`;

      // Fade in content and overlay as user scrolls down
      if (scrollRatio > 0.2) {
        overlay.style.opacity = 1; // Show overlay
        content.style.display = 'block'; // Show content
      } else {
        overlay.style.opacity = 0; // Hide overlay if not scrolled enough
        content.style.display = 'none'; // Hide content if not scrolled enough
      }
    } else {
      // Reset if the section is out of view
      background.style.transform = 'translate(-50%, -50%) scale(0.2)';
      overlay.style.opacity = 0;
      content.style.display = 'none';
    }
  });
</script>
